# Find PyBuffer swig files from ITKBridgeNumPy sources
set(ITKBridgeNumpy_WRAP_DIR "${ITKBridgeNumPy_INCLUDE_DIRS}/../wrapping")

file(READ "${ITKBridgeNumpy_WRAP_DIR}/PyBuffer.i.init"
    PyBufferInit)

# Append imports required by RTK. All overriden types in this class should be
# defined in itkImageDuplicator as well.
string(REPLACE "from itkImageDuplicatorPython import *"
  "from itkImageDuplicatorPython import *\nfrom itkImageDuplicatorRTKPython import *\n"
  PyBufferInit "${PyBufferInit}")
file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/PyBufferRTK.i" "${PyBufferInit}")

itk_wrap_class("itk::PyBuffer")

  file(TOUCH ${CMAKE_CURRENT_BINARY_DIR}/PyBufferRTK.i)
  UNIQUE(types "${WRAP_ITK_SCALAR};UC;D;US;UI;UL;SC;SS;SI;SL;F")
  foreach(t ${types})
    string(REGEX MATCHALL "(V${t}|CV${t})" VectorTypes "${WRAP_ITK_VECTOR}")
    set(PixelType ${t})
    foreach(d ${ITK_WRAP_IMAGE_DIMS})
      # Image Vector types
	  set(vectorComponents 2 3 4 5)
      foreach(vec_dim ${vectorComponents})
	    list(FIND ITK_WRAP_VECTOR_COMPONENTS "${vec_dim}" _index)
        if (${_index} EQUAL -1)
          foreach(vec_type ${VectorTypes})

              set(PyBufferTypes I${vec_type}${vec_dim}${d})
              configure_file( ${ITKBridgeNumpy_WRAP_DIR}/PyBuffer.i.in
                         ${CMAKE_CURRENT_BINARY_DIR}/PyBufferRTK.i.temp
                         @ONLY)
              file(READ ${CMAKE_CURRENT_BINARY_DIR}/PyBufferRTK.i.temp
                  PyBufferInterfaceTemp)
              file(APPEND ${CMAKE_CURRENT_BINARY_DIR}/PyBufferRTK.i
                  ${PyBufferInterfaceTemp})
              itk_wrap_template("I${vec_type}${vec_dim}${d}" "itk::Image<${ITKT_${vec_type}${vec_dim}},${d}>")

          endforeach()
		endif()
      endforeach()
    endforeach(d)
  endforeach(t)

  UNIQUE(types "D;UC;US;${WRAP_ITK_REAL}")
  list(FIND ITK_WRAP_IMAGE_DIMS "1" _indexdim)
  foreach(t ${types})
    if (${_indexdim} EQUAL -1)
      set(PixelType ${t})
      set(PyBufferTypes I${t}1)
      configure_file( ${ITKBridgeNumpy_WRAP_DIR}/PyBuffer.i.in
                 ${CMAKE_CURRENT_BINARY_DIR}/PyBufferRTK.i.temp
                 @ONLY)
      file(READ ${CMAKE_CURRENT_BINARY_DIR}/PyBufferRTK.i.temp
          PyBufferInterfaceTemp)
      file(APPEND ${CMAKE_CURRENT_BINARY_DIR}/PyBufferRTK.i
          ${PyBufferInterfaceTemp})
      itk_wrap_template("I${t}1" "itk::Image<${ITKT_${t}}, 1>")
    endif()
  endforeach()

itk_end_wrap_class()

# Add library files to be included at a submodule level and copy them into
# ITK's wrapping typedef directory.
set(ITK_WRAP_PYTHON_SWIG_EXT
  "%include PyBufferRTK.i\n${ITK_WRAP_PYTHON_SWIG_EXT}")

file(COPY "${CMAKE_CURRENT_BINARY_DIR}/PyBufferRTK.i"
  DESTINATION "${WRAPPER_MASTER_INDEX_OUTPUT_DIR}")
